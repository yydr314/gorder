# 生成 types 和 gin：oapi-codegen -generate "types" -o order_types.gen.go -package order order.yaml 放在 order/port 和 common/client/order 裡面
# 生成 gin：oapi-codegen -generate "gin" -o order_api.gen.go -package ports order.yaml 放在order/port 裡面
# 生成 client：oapi-codegen -generate "client" -o order_client.gen.go -package order order.yaml 這個生成出來的東西要放在 common/client/order 裡面
openapi: "3.0.3"
info:
  title: order service
  description: order service
  version: "1.0"
servers:
  - url: "https://{hostname}/api"
    variables:
      hostname:
        default: 127.0.0.1
paths:
  /customer/{costumerID}/orders/{orderID}:
    get:
      description: get order
      parameters:
        - in: path
          name: costumerID
          schema:
            type: string
          required: true

        - in: path
          name: orderID
          schema:
            type: string
          required: true

      responses:
        "200":
          description: todo
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"

        default:
          description: todo
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /customer/{costumerID}/orders:
    post:
      description: "create order"
      parameters:
        - in: path
          name: costumerID
          schema:
            type: string
          required: true

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateOrderRequest"
      responses:
        "200":
          description: todo
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"

        default:
          description: todo
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  schemas:
    Order:
      type: object
      required:
        - id
        - customerID
        - status
        - items
        - paymentLink
      properties:
        id:
          type: string
        customerID:
          type: string
        status:
          type: string
        items:
          type: array
          items:
            $ref: "#/components/schemas/Item"
        paymentLink:
          type: string

    Item:
      type: object
      required:
        - id
        - name
        - quantity
        - priceID
      properties:
        id:
          type: string
        quantity:
          type: integer
          format: int32
        name:
          type: string
        priceID:
          type: string

    Error:
      type: object
      properties:
        message:
          type: string

    CreateOrderRequest:
      type: object
      required:
        - customerID
        - items
      properties:
        customerID:
          type: string
        items:
          type: array
          items:
            $ref: "#/components/schemas/ItemWithQuantity"

    ItemWithQuantity:
      type: object
      required:
        - id
        - quantity
      properties:
        id:
          type: string
        quantity:
          type: integer
          format: int32